% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/summarise.r
\name{summarise}
\alias{summarise}
\alias{summarise_}
\alias{summarize}
\alias{summarize_}
\alias{survey_mean}
\alias{survey_median}
\alias{survey_quantile}
\alias{survey_ratio}
\alias{survey_total}
\alias{unweighted}
\title{Summarise multiple values to a single value.}
\usage{
summarise(.data, ...)
}
\arguments{
\item{.data}{A \code{tbl_svy} object}

\item{...}{Name-value paris of summary functions}
}
\description{
Summarise multiple values to a single value.
}
\details{
\describe{
Summarise for \code{tbl_svy} objects accepts several specialized functions:
\item{\code{survey_mean(x, na.rm = FALSE, vartype = c("se", "ci", "var", "cv"), level = 0.95, proportion = FALSE, prop_method = NULL)}}{
   Calculate the survey mean of the entire population or by \code{groups}.}
\item{\code{survey_total(x, na.rm = FALSE, vartype = c("se", "ci", "var", "cv"), level = 0.95)}}{
   Calculate the survey total of the entire population or by \code{groups}.}
 \item{\code{survey_ratio(numerator, denominator, na.rm = FALSE, vartype = c("se", "ci", "var", "cv"), level = 0.95)}}{
   Calculate the ratio of 2 variables in the entire population or by \code{groups}.}
\item{\code{survey_quantile(x, quantiles, na.rm = FALSE, vartype = c("se", "ci"), level = 0.95, q_method = "linear", f = 1, interval_type = c("Wald", "score", "betaWald"), ties = c("discrete", "rounded"))}}{
   Calculate quantiles in the entire population or by \code{groups}.}
 \item{\code{survey_median(x, na.rm = FALSE, vartype = c("se", "ci"), level = 0.95)}}{
   Calculate the median in the entire population or by \code{groups}.}
 \item{\code{unweighted(x)}}{
   Calculate an unweighted estimate as you would on a regular \code{tbl_df}.}
}
}
\examples{
library(survey)
data(api)

dstrata <- apistrat \%>\%
  design_survey(strata = stype, weights = pw)

dstrata \%>\%
  summarise(api99 = survey_mean(api99),
            api00 = survey_mean(api00),
            api_diff = survey_mean(api00 - api99))

dstrata_grp <- dstrata \%>\%
  group_by(stype)

dstrata_grp \%>\%
  summarise(api99 = survey_mean(api99),
            api00 = survey_mean(api00),
            api_diff = survey_mean(api00 - api99))

}

