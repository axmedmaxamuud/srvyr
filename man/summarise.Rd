% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/summarise.r
\name{summarise}
\alias{summarise}
\alias{summarise_}
\alias{summarize}
\alias{summarize_}
\title{Summarise multiple values to a single value.}
\usage{
summarise(.data, ...)
summarize(.data, ...)
summarise_(.data, ..., .dots)
summarize_(.data, ..., .dots)
}
\arguments{
\item{.data, }{tbl A \code{tbl_svy} object}

\item{...}{Name-value pairs of summary functions}

\item{.dots}{Used to work around non-standard evaluation. See
\code{vignette("nse", package = "dplyr")} for details.}
}
\description{
Summarise multiple values to a single value.
}
\details{
Summarise for \code{tbl_svy} objects accepts several specialized functions.
Each of the functions a variable (or two, in the case of
\code{survey_ratio}), from the data.frame and default to providing the measure
and its standard error.

The argument \code{vartype} can choose one or more measures of uncertainty,
\code{se} for standard error, \code{ci} for confidence interval, \code{var}
for variance, and \code{cv} for coefficient of variation. \code{level}
specifies the level for the confidence interval.

The other arguments correspond to the analagous function arguments from the
survey package.

The available functions are:

\describe{
\item{\code{survey_mean(x, na.rm = FALSE, vartype = c("se", "ci", "var", "cv"), level = 0.95, proportion = FALSE, prop_method = NULL)}}{
   Calculate the survey mean of the entire population or by \code{groups}. Based on \code{\link[survey]{svymean}}.}
\item{\code{survey_total(x, na.rm = FALSE, vartype = c("se", "ci", "var", "cv"), level = 0.95)}}{
   Calculate the survey total of the entire population or by \code{groups}. Based on \code{\link[survey]{svytotal}}.}
 \item{\code{survey_ratio(numerator, denominator, na.rm = FALSE, vartype = c("se", "ci", "var", "cv"), level = 0.95)}}{
   Calculate the ratio of 2 variables in the entire population or by \code{groups}. Based on \code{\link[survey]{svyratio}}.}
\item{\code{survey_quantile(x, quantiles, na.rm = FALSE, vartype = c("se", "ci"), level = 0.95, q_method = "linear", f = 1, interval_type = c("Wald", "score", "betaWald"), ties = c("discrete", "rounded"))}}{
   Calculate quantiles in the entire population or by \code{groups}. Based on \code{\link[survey]{svyquantile}}.}
 \item{\code{survey_median(x, na.rm = FALSE, vartype = c("se", "ci"), level = 0.95, q_method = "linear", f = 1, interval_type = c("Wald", "score", "betaWald"), ties = c("discrete", "rounded"))}}{
   Calculate the median in the entire population or by \code{groups}. \code{\link[survey]{svyquantile}}.}
 \item{\code{unweighted(x)}}{
   Calculate an unweighted estimate as you would on a regular \code{tbl_df}. Based on dplyr's \code{\link[dplyr]{summarise}}.}
}
}
\examples{
library(survey)
data(api)

dstrata <- apistrat \%>\%
  as_survey_design(strata = stype, weights = pw)

dstrata \%>\%
  summarise(api99 = survey_mean(api99),
            api00 = survey_mean(api00),
            api_diff = survey_mean(api00 - api99))

dstrata_grp <- dstrata \%>\%
  group_by(stype)

dstrata_grp \%>\%
  summarise(api99 = survey_mean(api99),
            api00 = survey_mean(api00),
            api_diff = survey_mean(api00 - api99))

}

