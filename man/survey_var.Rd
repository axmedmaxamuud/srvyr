% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/survey_statistics.r
\name{survey_var}
\alias{survey_var}
\alias{survey_sd}
\title{Calculate the population variance and its variation using survey methods}
\usage{
survey_var(x, na.rm = FALSE, vartype = c("se", "var"),
  .svy = current_svy(), ...)

survey_sd(x, na.rm = FALSE, .svy = current_svy(), ...)
}
\arguments{
\item{x}{A variable or expression, or empty}

\item{na.rm}{A logical value to indicate whether missing values should be dropped}

\item{vartype}{Report variability as one or more of: standard error ("se", default)
or variance ("var") (confidence intervals and coefficient
of variation not available).}

\item{.svy}{A \code{tbl_svy} object. When called from inside a summarize function
the default automatically sets the survey to the current survey.}

\item{...}{Ignored}
}
\description{
Calculate population variance from complex survey data. A wrapper
around \code{\link[survey]{svyvar}}. \code{survey_var} should always be
called from \code{\link{summarise}}.
}
\details{
Sampling distribution of the variance statistic is in general asymmetric and
if analised variable isn't normally distributed or there is huge variation in
sampling probabilities of the survey design (or both) need not approach
normality reasonably fast (with growing number of survey design degrees of
freedom). Because of that constructing confidence intervals for population
variance is in general a complicated task and can't be done with the same
methods srvyr package provides for other statistics.
}
\examples{
library(survey)
data(api)

dstrata <- apistrat \%>\%
  as_survey_design(strata = stype, weights = pw)

dstrata \%>\%
  summarise(api99_var = survey_var(api99),
            api99_sd = survey_sd(api99))

dstrata \%>\%
  group_by(awards) \%>\%
  summarise(api00_var = survey_var(api00),
            api00_sd = survey_sd(api00))

# standard deviation and variance of the population variance estimator
# are available with vartype argument
# (but not for the population standard deviation estimator)
dstrata \%>\%
  summarise(api99_variance = survey_var(api99, vartype = c("se", "var")))
}
